/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Result = {
  _id: string;
  _type: "result";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  job?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "job";
  };
  title?: string;
  description?: string;
  resultDate?: string;
  cutoffMarks?: string;
  meritListInfo?: string;
  buttons?: Array<{
    label?: string;
    url?: string;
    _key: string;
  }>;
  nextSteps?: Array<string>;
  status?: "declared" | "provisional" | "final" | "withheld";
};

export type AdmitCard = {
  _id: string;
  _type: "admitCard";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  job?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "job";
  };
  title?: string;
  description?: string;
  releaseDate?: string;
  downloadWindow?: string;
  instructions?: Array<string>;
  requiredDocuments?: Array<string>;
  buttons?: Array<{
    label?:
      | "admitCard"
      | "officialWebsite"
      | "examCenter"
      | "helpdesk"
      | "login";
    url?: string;
    _key: string;
  }>;
  status?: "released" | "comingSoon" | "delayed";
};

export type AnnouncementBanner = {
  _id: string;
  _type: "announcementBanner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  content?: string;
  ctaLink?: string;
  isActive?: boolean;
  startDate?: string;
  endDate?: string;
};

export type MainBanner = {
  _id: string;
  _type: "mainBanner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slides?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    link?: string;
    caption?: string;
    _key: string;
  }>;
  isActive?: boolean;
  startDate?: string;
  endDate?: string;
};

export type Job = {
  _id: string;
  _type: "job";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  sallbus_img?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: string;
  description?: string;
  slug?: Slug;
  publishedAt?: string;
  vacancyTotal?: number;
  vacancyDetails?: Array<{
    postName?: string;
    total?: number;
    categoryBreakdown?: {
      ur?: number;
      ewc?: number;
      obc?: number;
      sc?: number;
      st?: number;
    };
    _key: string;
  }>;
  importantDates?: {
    notification?: string;
    applyStart?: string;
    applyEnd?: string;
    feeLastDate?: string;
    correctionWindow?: string;
    exam?: string;
    admitCard?: string;
    result?: string;
  };
  eligibility?: {
    ageMin?: number;
    ageMax?: number;
    ageAsOn?: string;
    education?: string;
    experience?: string;
    physicalStandards?: string;
  };
  postWiseEligibility?: Array<{
    post?: string;
    criteria?: Array<string>;
    _key: string;
  }>;
  applicationFee?: Array<{
    category?: string;
    amount?: number;
    _key: string;
  }>;
  selectionProcess?: Array<string>;
  documentsRequired?: Array<string>;
  applicationInstructions?: string;
  officialLinks?: Array<{
    label?: string;
    url?: string;
    _key: string;
  }>;
  postSalary?: Array<{
    post?: string;
    category?: string;
    salary_range?: string;
    _key: string;
  }>;
  postSyllabus?: Array<{
    post?: string;
    topics?: Array<{
      mainTopic?: string;
      chapters?: Array<string>;
      _key: string;
    }>;
    _key: string;
  }>;
  faqs?: Array<{
    question?: string;
    answer?: string;
    _key: string;
  }>;
  isActive?: boolean;
  isUpcomming?: boolean;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | Result
  | AdmitCard
  | AnnouncementBanner
  | MainBanner
  | Job
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
